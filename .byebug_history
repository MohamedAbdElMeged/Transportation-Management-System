c
context.success?
context
c
Driver.first
context
c
context.failure?
context
c
@driver
driver.success?
driver
login_params
c
login_params
c
login_params
c
login_params
c
driver.success?
driver
c
unless driver || driver&.authenticate("test password")
    puts "failed"
end
unless driver || driver&.authenticate("test password")
driver = Driver.find_by(email: "adriene@boehm.test")
driver = Driver.find_by(email:"adriene@boehm.test)
driver.authenticate("test password")
driver = Driver.first
Driver.all
json
c
n
c
json.pluck("assigned_at")
json
json.pluck("assinged_at")
c
json.pluck("id")
json.pluck(:id)
json
c
json
response.status
c
json
c
truck.id
response
json
c
truck
json
c
token
c
token
c
json
response.status
c
json
c
json
response
c
json
c
Driver.all.size
c
Driver.all.size
c
n
Driver.all.size
Driver.all
c
json["email"]
c
response.status
json.keys
json[0]
json.first
response
json
c
Driver.all.size
json
c
Driver.all.size
Driver.all
json
c
Driver.all.size
c
json
json.size
Driver.first.email == email
Driver.first.email
email
Driver.all.size
Driver.all
json
exit
Driver.all.size
c
json.size
json
c
json.size
json
c
result
c
driver
c
driver
application
c
result
c
described_class.call
subject
context
application
result
c
result.email
result
c
result.email
result
c
driver.save!
driver.valid?
driver
c
driver2.valid?
driver2
Driver.first
driver1
Driver.all
c
driver.valid?
driver
c
n
c
@email
n
continue
c
@email
n
arg
continue
